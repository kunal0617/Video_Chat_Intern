AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Amazon Chime SDK Smart Video Sending Demo
Globals:
  Function:
    Runtime: nodejs12.x
    Timeout: 30
    MemorySize: 128
    Environment:
      Variables:
        MEETINGS_TABLE_NAME:
          Ref: Meetings
        ATTENDEES_TABLE_NAME:
          Ref: Attendees
Resources:
  ChimeMeetingsAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ChimeMeetingsAccess
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - chime:CreateMeeting
          - chime:DeleteMeeting
          - chime:GetMeeting
          - chime:ListMeetings
          - chime:BatchCreateAttendee
          - chime:CreateAttendee
          - chime:DeleteAttendee
          - chime:GetAttendee
          - chime:ListAttendees
          Resource: '*'
      Roles:
      - Ref: ChimeSdkJoinLambdaRole
      - Ref: ChimeSdkAttendeeLambdaRole
      - Ref: ChimeSdkEndLambdaRole
  Meetings:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: Title
        AttributeType: S
      - AttributeName: Passcode
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
      - AttributeName: Title
        KeyType: HASH
      GlobalSecondaryIndexes:
      - IndexName: Passcode
        KeySchema:
        - AttributeName: Passcode
          KeyType: HASH
        Projection:
          ProjectionType: ALL
      TimeToLiveSpecification:
        AttributeName: TTL
        Enabled: true
  Attendees:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: AttendeeId
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
      - AttributeName: AttendeeId
        KeyType: HASH
  ChimeSdkIndexLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.index
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: GET
            Auth:
              Authorizer: null
      CodeUri: ChimeSdkIndexLambda
  ChimeSdkJoinLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.join
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: Meetings
      - DynamoDBCrudPolicy:
          TableName:
            Ref: Attendees
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /join
            Method: POST
      CodeUri: ChimeSdkJoinLambda
  ChimeSdkEndLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.end
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: Meetings
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /end
            Method: POST
      CodeUri: ChimeSdkEndLambda
  ChimeSdkAttendeeLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handlers.attendee
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: Meetings
      - DynamoDBCrudPolicy:
          TableName:
            Ref: Attendees
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /attendee
            Method: GET
      CodeUri: ChimeSdkAttendeeLambda
Outputs:
  ApiURL:
    Description: API endpoint URL for Prod environment
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
